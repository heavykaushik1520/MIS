package com.mis.configuration;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.web.SecurityFilterChain;

import com.mis.services.LoginService;

@Configuration
@EnableWebSecurity
public class SecurityConfiguration {
	
	@Autowired
	private LoginService loginService;
	
	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity httpSecurity) throws Exception {
		return httpSecurity
				.csrf(postRequest -> postRequest.disable())
				.authorizeHttpRequests(request -> {
					request.requestMatchers("/home" , "/register").permitAll();
					request.requestMatchers("/admin/**").hasRole("ADMIN");
					request.requestMatchers("/sales-person/**").hasRole("SALES_PERSON");
					request.anyRequest().authenticated();
					
				})
				.formLogin(loginFormUrl -> loginFormUrl.permitAll())
				.build();
	}
	
	@Bean
	public UserDetailsService userDetailsService() {
		return loginService;
	}
	
	public AuthenticationProvider authenticationProvider() {
		DaoAuthenticationProvider provider = new DaoAuthenticationProvider();
		provider.setUserDetailsService(loginService);
		provider.setUserDetailsPasswordService(null);
	}

}
